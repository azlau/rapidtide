#!/usr/bin/env python

import numpy as np
import matplotlib.pyplot as plt
import rapidtide.correlate as tide_corr
import rapidtide.io as tide_io

input1 = tide_io.readvec('tc1')
input2 = tide_io.readvec('tc2')
input3 = tide_io.readvec('../dst/dgsr_gauss_reference_resampres_pass1.txt')
input4 = tide_io.readvec('../dst/dgsr_gauss_reference_resampres_pass3.txt')
#input4 = tide_io.readvec('../dst/diff_quad_reference_resampres_pass1.txt')
#input5 = tide_io.readvec('../dst/diff_quad_reference_resampres_pass3.txt')


#thex, thexcorr = tide_corr.arbcorr(input1, 12.5, input2, 12.5, windowfunc='hamming')
#plt.plot(thex, thexcorr)
#plt.show()

fig = plt.figure()
ax = fig.add_subplot(1, 1, 1)

thelen = len(input1)
numneg = 300
numpos = 300
#for numbins in [50, 100, 200]:
#    thex, thexmi, dummy = tide_corr.cross_MI(input1, input2,
#                                                negsteps=numneg,
#                                                possteps=numpos,
#                                                Fs=12.5,
#                                                fast=False,
#                                                prebin=True,
#                                                bins=numbins,
#                                                returnaxis=True,
#                                                windowfunc='hamming')
#    thexnowin, thexminowin, dummy = tide_corr.cross_MI(input1, input2,
#                                                negsteps=numneg,
#                                                possteps=numpos,
#                                                Fs=12.5,
#                                                fast=False,
#                                                prebin=True,
#                                                bins=numbins,
#                                                returnaxis=True,
#                                                windowfunc='None')
#    ax.plot(thex, thexmi, label=str(numbins))
#    #plt.plot(thexnowin, thexminowin)
#ax.legend()
#plt.show()

for windowfunc in ['None']:
    for sigma in [0.25]:
        for numbins in [10]:
            thefastx, thefastxmi, dummy = tide_corr.cross_MI(input3, input3,
                                                                negsteps=200,
                                                                possteps=200,
                                                                Fs=5.33,
                                                                bins=numbins,
                                                                windowfunc='hamming',
                                                                sigma=sigma,
                                                                returnaxis=True,
                                                                prebin=True,
                                                                fast=False,
                                                                debug=False)
            thex, thexmi, dummy = tide_corr.cross_MI(input3, input3,
                                                                negsteps=200,
                                                                possteps=200,
                                                                Fs=5.33,
                                                                bins=numbins,
                                                                windowfunc='hamming',
                                                                sigma=sigma,
                                                                returnaxis=True,
                                                                prebin=False,
                                                                fast=False,
                                                                debug=False)
            ax.plot(thex, thexmi, label='bins:' + str(numbins) + ', sigma:' + str(sigma) + ', win:' + windowfunc)
            ax.plot(thefastx, thefastxmi, label='bins:' + str(numbins) + ', sigma:' + str(sigma) + ', win:' + windowfunc)
ax.legend(['normal', 'fast'])
plt.show()

